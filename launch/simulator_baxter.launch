<launch>
  <!-- <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/> -->

  <arg name="gazebo" default="true"/>
  <arg name="rviz" default="true"/>
  <arg name="sim" default="true"/>
  <!-- <arg name="gui" default="true" /> -->
  
  <!-- <include file="$(find baxter_gazebo)/launch/baxter_world.launch"></include> -->
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- These arguments load the electric grippers, for example left_electric_gripper:=true -->
    <arg name="left_electric_gripper" default="true"/>
    <arg name="right_electric_gripper" default="true"/>

    <!-- Load the URDF into the ROS Parameter Server -->
    <!-- This xacro will pull in baxter_base.urdf.xacro, left_end_effector.urdf.xacro,
                                             and right_end_effector.urdf.xacro
         Note: if you set this to false, you MUST have set the robot_description prior
               to launching baxter_world -->
    <arg name="load_robot_description" default="true"/>
    <param if="$(arg load_robot_description)" name="robot_description"
        command="$(find xacro)/xacro.py --inorder $(find baxter_description)/urdf/baxter.urdf.xacro gazebo:=true"/>

    <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
    <include if="$(arg gazebo)" file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find baxter_gazebo)/worlds/baxter.world"/>
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the software version into the ROS Parameter Server -->
    <param name="rethink/software_version" value="1.2.0" />

    <!-- Publish a static transform between the world and the base of the robot -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 1 world base" /> -->

    <arg name="robot_name" default="baxter"/>
    <arg name="init_pose" default="-x 0 -y 0 -z 0.93"/>

    <!-- The odometry estimator, throttling, fake laser etc. go here -->
    <!-- All the stuff as from usual robot launch file -->

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
     <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="$(arg init_pose) -param robot_description -urdf -model $(arg robot_name)
          -J baxter::right_s0 -0.272659
          -J baxter::right_s1 1.04701
          -J baxter::right_e0 -0.00123203
          -J baxter::right_e1 0.49262
          -J baxter::right_w0 -0.0806423
          -J baxter::right_w1 -0.0620532
          -J baxter::right_w2 0.0265941
          -J baxter::left_s0 0.192483
          -J baxter::left_s1 1.047
          -J baxter::left_e0 0.000806359
          -J baxter::left_e1 0.491094
          -J baxter::left_w0 -0.178079
          -J baxter::left_w1 -0.0610333
          -J baxter::left_w2 -0.0124707" />

    <!-- ros_control baxter launch file -->
    <include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control.launch">
        <arg name="right_electric_gripper" value="$(arg right_electric_gripper)"/>
        <arg name="left_electric_gripper" value="$(arg left_electric_gripper)"/>
    </include>

  <node pkg="tf" type="static_transform_publisher" name="baxter_link_tf" args="0 0 0 0 0 0 1 /ar_marker_3 /baxter_link 100"/>

  <node pkg="tf" type="static_transform_publisher" name="base_link_tf" args="0 0 0 0 0 0 1 /baxter_link /base 100"/>

  <!-- <node pkg="gatlin" type="baxter_arm_controller.py" name="baxter_arm_controller" output="screen"/> -->

</launch>