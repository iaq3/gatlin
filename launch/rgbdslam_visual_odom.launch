<!-- This file demonstrates the parameterization for a computer with low performance
     The openni driver is started from this file -->
<launch>

  <!--<include file="$(find turtlebot_bringup)/launch/minimal.launch"></include>

  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
	<arg name="rgb_processing" value="true" />
	<arg name="depth_registration" value="true" />
	<arg name="depth_processing" value="true" />
  </include>

  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" >
	<arg name="port" value="9090"/>
  </include>-->

  <node name="$(anon dynparam)" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters /camera/driver">
    <param name="image_mode" type="int" value="2" />
    <param name="depth_mode" type="int" value="2" />
  </node>

  <node pkg="gatlin" type="octomap_server" name="octomap_server" output="screen" ></node>

  <node pkg="rgbdslam" type="rgbdslam" name="rgbdslam" cwd="node" required="true" output="screen"> 
    <param name="config/start_paused"      value="true"/>

    <param name="config/fixed_frame_name"      value="/map"/>
    <param name="config/base_frame_name"       value="/odom"/>

    <param name="config/store_pointclouds"       value="true"/>
    <param name="config/octomap_online_creation"       value="true"/>



    <!-- Input data settings, send_clouds_rate, send_clouds_delay  -->
    <param name="config/topic_image_mono"              value="/camera/rgb/image_rect_color"/> 
    <param name="config/topic_image_depth"             value="/camera/depth_registered/hw_registered/image_rect_raw"/>

    <!--<param name="config/feature_detector_type"         value="ORB"/> ORB are fastest and require no GPU -->
    <!--<param name="config/feature_extractor_type"        value="ORB"/> ORB are fastest and require no GPU (SIFTGPU) -->
    <param name="config/feature_detector_type"         value="SURF"/><!-- If SIFTGPU is enabled in CMakeLists.txt, use SURF here -->
    <param name="config/feature_extractor_type"        value="SURF"/><!-- If SIFTGPU is enabled in CMakeLists.txt, use SURF here -->
    <param name="config/matcher_type"                  value="FLANN"/> <!-- FLANN (not avail for ORB features)-->

    <param name="config/max_keypoints"                 value="300"/><!-- Frame-to-frame comparisons are faster with few features-->
    <param name="config/min_sampled_candidates"        value="5"/><!-- Frame-to-frame comparisons to random frames-->
    <param name="config/nn_distance_ratio"             value="0.8"/>
    <param name="config/max_dist_for_inliers"          value="2.0"/>
    <param name="config/ransac_iterations"             value="100"/>

    <param name="config/data_skip_step"                value="1"/><!-- skip every n-th frame completely -->
    <param name="config/optimizer_skip_step"           value="5"/><!-- optimize every n-th frame. Set high for offline operation -->
    <param name="config/backend_solver"                value="pcg"/> <!-- pcg is fast and good for online operation -->
    <param name="config/cloud_creation_skip_step"      value="8"/> <!-- Subsample point cloud during creation: Makes creation and EMM faster, requires less storage -->
    <param name="config/visualization_skip_step"       value="2"/> <!-- Increase this if 3D rendering in GUI is still to slow-->
    <param name="config/octomap_resolution"            value="0.03"/><!-- 5 cm resolution renders fast enough for small maps -->
    <param name="config/maximum_depth"                 value="3.5"/><!-- Do not render points further than 3 meter in GUI and Octomap-->
    <param name="config/minimum_depth"                 value="0.8"/><!-- Do not render points further than 3 meter in GUI and Octomap-->


    <!-- Input data settings-->
    <param name="config/topic_image_mono"              value="/camera/rgb/image_color"/> 
    <param name="config/topic_image_depth"             value="/camera/depth_registered/sw_registered/image_rect_raw"/>

    <param name="config/feature_extractor_type"        value="ORB"/><!-- ORB are fastest descriptors and require no GPU -->
    <param name="config/feature_detector_type"         value="ORB"/><!-- FAST can guarantee a certain range of keypoints using an adjuster-->
    <param name="config/detector_grid_resolution"      value="3"/><!-- detect on a 2x2 grid -->
    <param name="config/max_keypoints"                 alue="600"/><!-- Extract no more than this many keypoints -->
    <param name="config/max_matches"                   value="300"/><!-- Keep the best n matches (important for ORB to set lower than max_keypoints) -->

    <param name="config/min_sampled_candidates"        value="0"/><!-- Frame-to-frame comparisons to random frames (big loop closures) -->
    <param name="config/predecessor_candidates"        value="3"/><!-- Frame-to-frame comparisons to sequential frames-->
    <param name="config/neighbor_candidates"           value="3"/><!-- Frame-to-frame comparisons to graph neighbor frames-->
    <param name="config/nn_distance_ratio"             value="0.9"/><!-- set empirically -->
    <param name="config/ransac_iterations"             value="100"/><!-- set empirically -->
    <param name="config/max_matches"                   value="200"/><!-- reduce the amount of matches (otherwise max=max_keypoints), removes outliers, speeds up ransac -->
    <param name="config/pose_relative_to"              value="inaffected"/><!-- only optimize part of graph with new constraints -->
    <param name="config/keep_all_nodes"                value="true"/><!-- assume zero motion if no motion could be found and continue -->
    <param name="config/fixed_frame_name"              value="/vodom"/><!-- Signify that this is not mapping -->

    <param name="config/backend_solver"                value="pcg"/> <!-- pcg is fast and good for online operation -->
    <param name="config/cloud_creation_skip_step"      value="16"/> <!-- Heavily subsample point cloud during creation -->
  </node>
</launch>
