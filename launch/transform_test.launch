<!--
  gatlinv4 launch
 -->
<launch>

<arg name="rviz" default="true"/>
<arg name="sim" default="false"/>


<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" >
	<arg name="port" value="9090"/>
</include>

<!-- <node pkg="gatlin" type="test_tf_broadcaster.py" name="test_tf_broadcaster" output="screen" ></node> -->

<node pkg="gatlin" type="tf_to_unity.py" name="tf_to_unity"></node>

<!-- <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find gatlin)/rviz/urdf.rviz" required="true" /> -->


<include file="$(find gatlin)/launch/arm_minimal.launch">
  <arg name="simulation" value="$(arg sim)"/>
  <arg name="rviz" value="$(arg rviz)"/>
</include>

<node pkg="gatlin" type="gatlin_arm_controller.py" name="gatlin_arm_controller" output="screen" ></node>

<node pkg="gatlin" type="vuforia.py" name="vuforia"></node>


<!-- <include file="$(find gatlin)/launch/model.launch">
	<arg name="gui" value="true" />
	<arg name="rviz" value="$(arg rviz)" />
</include> -->

<!-- <include file="$(find gatlin)/launch/arm_minimal.launch">
  <arg name="rviz" value="$(arg rviz)"/>
</include> -->

<!-- <node if="$(arg calibrate)" pkg="dynamic_tf" type="server.py" name="server" output="screen" ></node> -->

<!-- <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
	<arg name="rgb_processing" value="true" />
	<arg name="depth_registration" value="true" />
	<arg name="depth_processing" value="true" />
</include> -->


<!-- <node pkg="topic_tools" type="throttle" name="camera_throttle"
  args="messages camera/rgb/image_color/compressed 5"/> --> -->


<!-- <node pkg="tf" type="static_transform_publisher" name="kinect_tf" args="0.1 0.04 0.9 -0.694582 0.694582 -0.132499 0.132499 /base_link /camera_rgb_optical_frame 100"/> -->
<!-- <node pkg="tf" type="static_transform_publisher" name="kinect_tf" args="0.1 0.04 0.62 -0.694581976063 0.694581976063 -0.132498598211 0.132498598211 /base_link /camera_rgb_optical_frame 100"/> -->

<!-- <node unless="$(arg calibrate)" pkg="tf" type="static_transform_publisher" name="kinect_tf" args="0.14 0.02 0.6 -0.698401123334 0.698401123334 -0.110615871041 0.110615871041 /base_link /camera_rgb_optical_frame 100"/> -->


<!-- 
from tf.transformations import euler_from_quaternion
print euler_from_quaternion([-0.694581976063, 0.694581976063, -0.132498598211, 0.132498598211])
(-2.7646015351594335, -0.0, -1.5707963267948968)
 -->
</launch>
